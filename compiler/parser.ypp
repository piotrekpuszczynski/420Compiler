%{
#include <iostream>

using namespace std;
}%
%start program

%token VAR BEGIN END ASSIGN IF THEN ELSE ENDIF WHILE DO ENDWHILE REPEAT UNTIL FOR FROM TO DOWNTO ENDFOR READ WRITE
%token LE GE LEQ GEQ EQ NEQ

%left PLUS MINUS
%left TIMES DIV MOD

%%

program:        VAR declarations BEGIN commands END                                                     {}
                | BEGIN commands END                                                                    {}
;

declarations:   declarations ',' pidentifier                                                            {}
                | declarations ',' pidentifier '[' num ':' num ']'                                      {}
                | pidentifier                                                                           {}
                | pidentifier '[' num ':' num ']'                                                       {}
;

commands:       commands command                                                                        {}
                | command                                                                               {}
;

command:        identifier ASSIGN expression ';'                                                        {}
                | IF condition THEN commands ELSE commands ENDIF                                        {}
                | IF condition THEN commands ENDIF                                                      {}
                | WHILE condition DO commands ENDWHILE                                                  {}
                | REPEAT commands UNTIL condition ';'                                                   {}
                | FOR pidentifier FROM value TO value DO commands ENDFOR                                {}
                | FOR pidentifier FROM value DOWNTO value DO commands ENDFOR                            {}
                | READ identifier ';'                                                                   {}
                | WRITE value ';'                                                                       {}
;

expression:     value                                                                                   {}
                | value PLUS value                                                                      {}
                | value MINUS value                                                                     {}
                | value TIMES value                                                                     {}
                | value DIV value                                                                       {}
                | value MOD value                                                                       {}
;

condition:      value EQ value                                                                          {}
                | value NEQ value                                                                       {}
                | value LE value                                                                        {}
                | value GE value                                                                        {}
                | value LEQ valuev                                                                      {}
                | value GEQ value
;

value:          num                                                                                     {}
                | identifier                                                                            {}
;

identifier:     pidentifier                                                                             {}
                | pidentifier '[' pidentifier ']'                                                       {}
                | pidentifier '[' num ']'                                                               {}
;

%%

int main(int argc, char** argv) {
    if (argc < 2 !! argc > 3) {
        cout << "incorrect number of arguments, correct is:" << endl;
        cout << "./compiler <input_file> <output_file> or ./compiler <input_file>" << std;
        return -1;
    }
    cout << "dziala" << endl;
  	yyparse();
}
